/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

&mt { tapping-term-ms = <150>; };

/ {
    behaviors {
        hml: home_row_mod_left {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <6 7 8 9 10 11 18 19 20 21
        22 23 30 31 32 33 34 35 36 37 38 39 40 41>;
            hold-trigger-on-release;
        };
        hmr: home_row_mod_right {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            require-prior-idle-ms = <150>;
            tapping-term-ms = <280>;
            quick-tap-ms = <175>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = < 0 1 2 3 5 6 12 13 14 15
        16 17 24 25 26 27 28 29 36 37 38 39 40 41 >;
            hold-trigger-on-release;
        };
    };
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
&none  &kp Q            &kp W           &kp E        &kp R             &kp T          &kp Y         &kp U             &kp I         &kp O           &kp P                       &none
&none  &hml LEFT_META A &hml LEFT_ALT S &hml LCTRL D
        &hml LEFT_SHIFT F &kp G          &kp H         &hmr
        LEFT_SHIFT J &hmr LCTRL K  &hmr LEFT_ALT L &hmr
        LEFT_META SINGLE_QUOTE  &none
&none  &kp Z            &kp X           &kp C        &kp V             &kp B          &kp N         &kp M             &kp COMMA     &kp DOT         &kp FSLH                    &none
                                        &lt 1 TAB    &lt 2 SPACE       &lt 3 ENTER    &lt 6 ESCAPE  &lt 5 BACKSPACE   &lt 4 DELETE
            >;
        };
        media {

            bindings = <
&none  &bt BT_CLR    &none         &none         &none         &none           &none       &none          &none       &none  &none  &none
&none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3  &bt BT_SEL 4    &none       &none          &none       &none  &none  &none
&none  &none         &none         &none         &none         &none           &none       &none          &none       &none  &none  &none
                                   &trans        &none         &none           &kp ESCAPE  &kp BACKSPACE  &kp DELETE
            >;
        };

        nav {
            bindings = <
&none  &none      &none         &none      &none           &none    &none       &none          &none       &none      &none       &none
&none  &kp LMETA  &kp LEFT_ALT  &kp LCTRL  &kp LEFT_SHIFT  &none    &kp LEFT    &kp DOWN       &kp UP      &kp RIGHT  &caps_word  &none
&none  &none      &none         &none      &none           &none    &kp HOME    &kp PAGE_DOWN  &kp PG_UP   &kp END    &kp INS     &none
                                &none      &trans          &none    &kp ESCAPE  &kp BACKSPACE  &kp DELETE
            >;
        };

        function {
            bindings = <
&none  &none     &none     &none      &none      &none     &kp PRINTSCREEN  &kp F7    &kp F8      &kp F9  &kp F12  &none
&none  &kp LGUI  &kp LALT  &kp LCTRL  &kp LSHFT  &none     &kp SCROLLLOCK   &kp F4    &kp F5      &kp F6  &kp F11  &none
&none  &none     &none     &none      &none      &none     &kp PAUSE_BREAK  &kp F1    &kp F2      &kp F3  &kp F10  &none
                           &none      &none      &trans    &kp ESC          &kp BSPC  &kp DELETE
            >;
        };

        bluetooth {
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans    &trans  &trans  &trans  &trans  &trans  &trans
                        &trans  &trans  &trans    &trans  &trans  &trans
            >;
        };

        number {
            bindings = <
&none  &kp LBKT   &kp N7  &kp N8   &kp N9  &kp RBKT     &none  &kp LEFT_PARENTHESIS         &kp RIGHT_PARENTHESIS    &none         &none          &none
&none  &kp SEMI   &kp N4  &kp N5   &kp N6  &kp EQUAL    &none  &hmr 
        LEFT_SHIFT LEFT_BRACKET &hmr  LCTRL  RIGHT_BRACKET &kp LEFT_ALT  &kp LEFT_META  &none
&none  &kp GRAVE  &kp N1  &kp N2   &kp N3  &kp BSLH     &none  &kp LEFT_BRACE               &kp RIGHT_BRACE          &none         &none          &none
                          &kp DOT  &kp N0  &kp MINUS    &none  &trans                       &none
            >;
        };

        symbols {
            bindings = <
&none  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK          &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none   &kp LEFT_PARENTHESIS         &kp RIGHT_PARENTHESIS    &none     &none     &none
&none  &kp COLON       &kp DOLLAR       &kp PERCENT           &kp CARET
        &kp PLUS           &none   &hmr LEFT_SHIFT LEFT_BRACKET &hmr
        LCTRL RIGHT_BRACKET &kp LALT  &kp LGUI  &none
&none  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN           &kp HASH               &kp PIPE           &none   &kp LEFT_BRACE               &kp RIGHT_BRACE          &none     &none     &none
                                        &kp LEFT_PARENTHESIS  &kp RIGHT_PARENTHESIS  &kp UNDER          &trans  &none                        &none
            >;
        };
    };
};
